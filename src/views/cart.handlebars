<style>
.container {
  margin: 0 auto;
  max-width: 800px;
}

.product-card {
  border: 1px solid #ccc;
  margin-bottom: 10px;
  padding: 10px;
}

.delete-icon {
  cursor: pointer;
  color: red;
  float: right;
}
</style>

<div class="container">
  <div class="cart-products">
    <h1 class="title">Products in My Cart</h1>
    <div id="cart-template" class="all-products">
        {{#each cart.products}}
    <div class="product-card">
      <div class="header-card">
        <h2>{{this.product.title}}</h2>
        <span class="delete-icon" onclick="deleteProduct('{{../cart._id}}', '{{this.product._id}}')">
          <i class="trash fas fa-trash-alt"></i>
        </span>
      </div>
      <p>{{this.product.description}}</p>
      <p><strong>Price:</strong> ${{this.product.price}}</p>
      <p><strong>Quantity:</strong> {{this.quantity}}</p>
    </div>
  {{/each}}
    </div>
  </div>
</div>



<script>
const renderCart = (cartData) => {
 const html = cartData
    .map((elem) => {
      return `
          <div class="product-card">
      <div class="header-card">
        <h2>${elem.product.title}</h2>
        <span class="quantity-control" data-product-id="${elem.product._id}" data-quantity="${elem.quantity}">
          <button class="decrease-quantity" onclick="updateQuantity('${elem._id}', '${elem.product._id}', 'decrease')">-</button>
          <span>${elem.quantity}</span>
          <button class="increase-quantity" onclick="updateQuantity('${elem._id}', '${elem.product._id}', 'increase')">+</button>
        </span>
        <span class="delete-icon" onclick="deleteProduct('${elem._id}', '${elem.product._id}')">
          <i class="trash fas fa-trash-alt"></i>
        </span>
      </div>
      <p>${elem.product.description}</p>
      <p><strong>Price:</strong> $${elem.product.price}</p>
    </div>
        `;
    })
    .join(" ");

  document.getElementById('cart-template').innerHTML = html;
  console.log('epa', cartData)
};

const fetchCart = async () => {
  try {
    const response = await fetch("http://localhost:8080/api/carts/getCartById/65e9c0f82e9686f84c07ec36");
    const cartData = await response.json();
    console.log('acrtData', cartData.message.products)
    if (cartData.message) {
      renderCart(cartData.message.products);
    } else {
      console.error("No cart data received from the server");
    }
  } catch (error) {
    console.error("Error fetching cart data:", error);
  }
};


const deleteProduct = async (productId) => {
  try {
    const response = await fetch(`http://localhost:8080/api/carts/deleteProduct/65e9c0f82e9686f84c07ec36/${productId}`, {
      method: "DELETE",
    });
    if (response.ok) {
      fetchCart(); // Fetch and render updated cart after deletion
    }
  } catch (error) {
    console.error("Error deleting product:", error);
  }
};

const deleteAllProducts = async () => {
  try {
    const response = await fetch(`http://localhost:8080/api/carts/deleteAllProducts/65e9c0f82e9686f84c07ec36`, {
      method: "DELETE",
    });
    if (response.ok) {
      fetchCart(); // Fetch and render updated cart after deletion
    }
  } catch (error) {
    console.error("Error deleting all products:", error);
  }
};

const updateProductQuantity = async (productId, quantity) => {
  try {
    const response = await fetch(`http://localhost:8080/api/carts/updateProductQuantity/65e9c0f82e9686f84c07ec36/${productId}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ quantity })
    });
    if (response.ok) {
      fetchCart(); // Fetch and render updated cart after quantity update
    }
  } catch (error) {
    console.error("Error updating product quantity:", error);
  }
};

// Call fetchCart function to fetch and render cart data
fetchCart();

</script>